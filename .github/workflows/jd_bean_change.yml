name: 京豆变动通知

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'
  watch:
    types: started
  repository_dispatch:
    types: jd_bean_change
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout github_lxk0301_jd_scripts
        uses: actions/checkout@v2
        with:
          repository: liuning0307/lxk0301
          ref: master
      - name: Send mail
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: zhangli.security@gmail.com
          password: JIANGHUCHUANLUANBU
          subject: Github Actions job result
          # Literal body:
          body: Build job of ${{github.repository}} completed successfully!
          # Read file contents as body:
          body: fdsfdsfdsfdsfds
          to: zhangli98745@163.com
          from: zhangli # <user@example.com>
          # Optional carbon copy recipients
          cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients
          bcc: r2d2@example.com,hansolo@example.com
          # Optional content type (defaults to text/plain):
          content_type: text/html
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional attachments:
          attachments: ./jd_bean_change.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - name: npm install
        run: npm install
      - name: '运行 【京豆变动通知】'
        run: node jd_bean_change.js
        env:
          JD_COOKIE: ${{ secrets.JD_COOKIE }}
          JD_DEBUG: ${{ secrets.JD_DEBUG }}
          PUSH_KEY: ${{ secrets.PUSH_KEY }}
          BARK_PUSH: ${{ secrets.B_PUSH }}
          BARK_SOUND: ${{ secrets.BARK_SOUND }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
          DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
          DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
          IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
